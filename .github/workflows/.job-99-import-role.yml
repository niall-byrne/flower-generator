---
name: flower-generator-job-import-role

on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        description: "The single version of Python that will be used as a string value."
        required: true
        type: string
      WORKFLOW_DISPATCH:
        description: "Indicates whether a 'workflow_dispatch' event triggered this workflow run."
        required: true
        type: boolean
      VERBOSITY:
        description: "Manages the types of Slack notifications."
        required: true
        type: boolean
    secrets:
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false
      GALAXY_API_KEY:
        description: "Optional, enables importing the role into Ansible Galaxy."
        required: false

jobs:

  import_role:

    runs-on: ubuntu-latest

    steps:
      - name: Publish to Galaxy -- Code Checkout (workflow dispatch)
        if: inputs.WORKFLOW_DISPATCH == true
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: 'role'
          ref: ${{ github.event.inputs.TAG  }}

      - name: Publish to Galaxy -- Code Checkout (published release)
        if: inputs.WORKFLOW_DISPATCH == false
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: 'role'

      - name: Publish to Galaxy -- Setup Environment
        run: |
          source "./role/.github/scripts/workflow-setup-environment.sh"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Publish to Galaxy -- Install Poetry
        run: |
          source "./role/.github/scripts/task-use-poetry.sh" "install-poetry"

      - name: Publish to Galaxy -- Set up Python ${{ inputs.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}

      - name: Publish to Galaxy -- Initialize Cache Locations
        run: |
          mkdir -p ~/.cache/pypoetry/virtualenvs

      - name: Publish to Galaxy -- Mount Poetry Cache
        uses: actions/cache@v3
        with:
          key: poetry-${{ hashFiles('./role/pyproject.toml') }}-${{ runner.os }}-${{ env.CACHE_TTL }}
          path: ~/.cache/pypoetry/virtualenvs

      - name: Publish to Galaxy -- Install Requirements
        run: |
          cd role
          source "./.github/scripts/task-use-poetry.sh" "install-project"

      - name: Publish to Galaxy -- Trigger Ansible Galaxy Import
        run: |
          cd role
          poetry run ansible-galaxy role import "${USER_NAME}" "${PROJECT_NAME}" --token "${API_KEY}" | tee import.log
          grep "0 errors" import.log
        env:
          API_KEY: ${{ secrets.GALAXY_API_KEY }}

      - name: Publish to Galaxy -- Report Job Status (Success)
        run: |
          ./role/.github/scripts/task-slack-notification.sh "${NOTIFICATION}" ":white_check_mark: automated ansible galaxy import has been completed!"

      - name: Publish to Galaxy -- Report Job Status (Failure)
        if: failure()
        run: |
          ./role/.github/scripts/task-slack-notification.sh "${NOTIFICATION}" ":x: automated ansible galaxy import has failed!"
