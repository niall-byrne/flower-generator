---
name: flower-generator-job-molecule-test

on:
  workflow_call:
    inputs:
      MOLECULE_PLATFORMS:
        description: "The GitHub OS platforms to use for testing as a JSON array of string values."
        required: true
        type: string
      MOLECULE_SCENARIOS:
        description: "The molecule scenarios to test as a JSON array of string values."
        required: true
        type: string
      PYTHON_VERSIONS:
        description: "The versions of Python to use as a JSON array of string values."
        required: true
        type: string
      VERBOSITY:
        description: "Manages the types of Slack notifications."
        required: true
        type: boolean
    secrets:
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

jobs:

  run_molecule_test:

    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: true
      matrix:
        platform: ${{ fromJSON(inputs.MOLECULE_PLATFORMS) }}
        python-version: ${{ fromJSON(inputs.PYTHON_VERSIONS) }}
        scenario: ${{ fromJSON(inputs.MOLECULE_SCENARIOS) }}
      max-parallel: 4

    steps:
      - name: Molecule Test -- Checkout Repository
        uses: actions/checkout@v3
        with:
          path: "role"

      - name: Molecule Test -- Setup Environment
        run: |
          source "./role/.github/scripts/workflow-setup-environment.sh"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Molecule Test -- Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Molecule Test -- Install Poetry
        run: |
          source "./role/.github/scripts/task-use-poetry.sh" "install-poetry"

      - name: Molecule Test -- Initialize Cache Locations
        run: |
          mkdir -p ~/.cache/pypoetry/virtualenvs
          source "./role/.github/scripts/task-setup-ansible-cache.sh"  \
            "$(pwd)/ansible_cache"                        \
            ~/.cache

      - name: Molecule Test -- Mount Ansible Cache
        uses: actions/cache@v3
        with:
          key: ansible-${{ hashFiles('./role/requirements.yml') }}-${{ env.CACHE_TTL }}
          path: ansible_cache

      - name: Molecule Test -- Mount Poetry Cache
        uses: actions/cache@v3
        with:
          key: poetry-${{ hashFiles('./role/pyproject.toml') }}-${{ runner.os }}-${{ env.CACHE_TTL }}
          path: ~/.cache/pypoetry/virtualenvs

      - name: Molecule Test -- Install Requirements
        run: |
          cd role
          source "./.github/scripts/task-use-poetry.sh" "install-project"

      - name: Molecule Test -- Reuse Cached Dependencies as Scenario
        run: |
          cd role
          poetry run molecule dependency
          mv ~/.cache/molecule/role/default ~/.cache/molecule/role/"${SCENARIO}"
        env:
          SCENARIO: ${{ matrix.scenario }}

      - name: Molecule Test -- Run ${{ matrix.scenario }} Scenario
        run: |
          cd role
          poetry run molecule test -s "${SCENARIO}"
        env:
          SCENARIO: ${{ matrix.scenario }}

      - name: Molecule Test -- Reuse Scenario Dependencies as Cache
        run: |
          mv ~/.cache/molecule/role/"${SCENARIO}" ~/.cache/molecule/role/default
        env:
          SCENARIO: ${{ matrix.scenario }}

      - name: Molecule Test -- Report Job Status (Success)
        if: inputs.VERBOSITY == true
        run: |
          ./role/.github/scripts/task-slack-notification.sh "${NOTIFICATION}" ":white_check_mark: molecule test scenario '${SCENARIO}' was successful!"
        env:
          SCENARIO: ${{ matrix.scenario }}

      - name: Molecule Test -- Report Job Status (Failure)
        if: failure()
        run: |
          ./role/.github/scripts/task-slack-notification.sh "${NOTIFICATION}" ":x: molecule test scenario '${SCENARIO}' has failed!"
        env:
          SCENARIO: ${{ matrix.scenario }}
